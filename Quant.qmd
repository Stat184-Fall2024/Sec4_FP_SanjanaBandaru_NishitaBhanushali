---
title: "Quantitative Visualization"
format: pdf
editor: visual
---

## Quantitative Research Questions

1.  What's the relationship between revenue and voting average? - Quant
2.  What's the relationship between runtime and voting average? - Quant
3.  What's the relationship between revenue and runtime?  - Quant
4.  What is the relationship between genre, revenue, runtime, and voting average. - Quant

## Load Libraries and Packages

```{r}
library(janitor)
library(knitr)
library(kableExtra)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
library(rvest)
library(plotly)
library(esquisse)
library(readr)
library(jtools)
library(stargazer)
```

## Read and Data Wrangle

```{r}

##Importing the Data----
##Importing the Data----
fantasyRaw <- read_csv(
  file = "~/Desktop/STAT184/fantasy.csv"
)

actionRaw <- read_csv(
  file = "~/Desktop/STAT184/action.csv"
)

horrorRaw <- read_csv(
  file = "~/Desktop/STAT184/horror.csv"
)

mysteryRaw <- read_csv(
  file = "~/Desktop/STAT184/mystery.csv"
)

##Merging the Data----
moviesRaw <- full_join(
  x = fantasyRaw,
  y = actionRaw
) %>%
  full_join(
    y = horrorRaw
  ) %>%
  full_join(
    y = mysteryRaw
  ) 

##Cleaning the Data----
moviesCleaned <- moviesRaw %>%
  rename(revenue = `gross(in $)`
  ) %>%
  dplyr:: select(-movie_id, -description, -director_id, -star_id
  ) %>%
  drop_na() %>%
  filter(!grepl('19', year)) %>%
  filter(!duplicated(movie_name)) %>%
  mutate(runtime = readr::parse_number(runtime))

##Listing Only Relevant Movies----
relevantMovies <- moviesCleaned %>%
  separate_wider_delim(
    cols = genre,
    delim = ",",
    names = c("Genre1", "Genre2", "Genre3"),
    too_few = "align_start"
  ) %>%
  pivot_longer(
    cols = starts_with("Genre"),
    names_to = "genreNumber",
    values_to = "genre"
  ) %>%
  mutate(genre = case_match(
    genre,
    " Action" ~ "Action",
    " Mystery" ~ "Mystery",
    " Fantasy" ~ "Fantasy",
    " Horror" ~ "Horror", 
    .default = genre
  )) %>%
  drop_na() %>%
  filter(
    genre == "Action" | 
      genre == "Horror" | 
      genre == "Mystery" | 
      genre == "Fantasy") %>%
  select(-genreNumber)

```

This process is to make the data more readable and easier to analyze. Additionally, we needed to organize the genres in order to consider it as a factor in our analysis of the relationship between revenue, average rating, genre, and runtime.

## Revenue vs. Average Rating

```{r}
ggplot(
  data = relevantMovies,
  mapping = aes(
    x = rating,
    y = revenue
  )
)+
  geom_point(size = 1)+
  labs(
    x = "Average Rating (out of 10)",
    y = "Revenue ($)",
    title = "Revenue vs. Average Rating"
  )+
  theme_bw()+
  theme(
    text = element_text(family="Times New Roman")
  )

```

![](images/clipboard-3548402614.png)

This visualization, with the average rating out of 10 on the x-axis and the revenue on the y-axis, shows a general positive correlation when the revenue begins approaching significant amounts. This trend is understandable because our database contains 3,258 movies and only a handful of them may have had a large budget. As a result, we must proceed with caution when coming to a conclusion about this relationship because big movies may have a higher rating because they can afford more skillful writers, producers, directors, and actors.

## Runtime vs. Average Rating

```{r}
ggplot(
  data = relevantMovies,
  mapping = aes(
    x = rating,
    y = runtime
  )
)+
  geom_point(size = 1)+
  labs(
    x = "Average Rating (out of 10)",
    y = "Runtime (mins)",
    title = "Runtime vs. Average Rating"
  )+
  theme_bw()+
  theme(
    text = element_text(family="Times New Roman")
  )
```

![](images/clipboard-1458109727.png)

This visualization depicts the relationship between runtime and average rating, which seems to have a positive and linear correlation. Most of the data is clustered towards the center of the graph because it is typical that a move will run between a little under 100 mins to 150 mins. As a result, since a good portion of movies have that runtime, most of the movies will have a typical rating of anywhere from 5.0 to 7.5. Both of the observable medians are being described through the middle of the graph.

## Revenue vs. Runtime

```{r}
ggplot(
  data = relevantMovies,
  mapping = aes(
    x = runtime,
    y = revenue
  )
)+
  geom_point(size = 1)+
  labs(
    x = "Runtime (mins)",
    y = "Revenue ($)",
    title = "Revenue vs. Runtime"
  )+
  theme_bw()+
  theme(
    text = element_text(family="Times New Roman")
  )
```

![](images/clipboard-3989056906.png)

This visualization shows the relationship between revenue and runtime, and though there seems like no there is no linear correlation, but there is a curve similar to a bell. This is understandable as many people do not want to pay for an extremely short or long movie, so the movies that seemed to make the most money were in that typical less than 100 min to 150 min runtime. This could be also due to an external factor like budget affecting the quality of the movie, because larger movies could afford high-quality editing.

## Regression Tables for Quantitative Graphs

```{r}
data(relevantMovies)
revenue_rating_regression <- lm(revenue ~ rating, data = relevantMovies)
runtime_rating_regression <- lm(runtime ~ rating, data = relevantMovies)
revenue_runtime_regression <- lm(revenue ~ runtime, data = relevantMovies)

stargazer(revenue_rating_regression,runtime_rating_regression,revenue_runtime_regression,  type = 'text')
```

![](images/Screen%20Shot%202024-12-17%20at%205.27.07%20PM.png)

This regression table depicts the relationship between each of the variables in the visualizations depicted above.

## Revenue vs. Runtime with Genre and Average Rating

```{r}
scatterplot <- ggplot(
  data = relevantMovies,
  mapping = aes(
    x = runtime,
    y = revenue,
    color = rating,
    #color = genre,
    #shape = averageRating
  )
)+
  geom_line(linewidth = 1)+
  labs(
    x = "Runtime (mins)",
    y = "Revenue ($)",
    color = "Average Rating",
    #color = "Genre",
    #shape = "Average Rating
    title = "Revenue vs. Runtime with Genre and Average Rating"
  )+
  scale_color_gradient(low = "#AFEEEE", high = "#668B8B")
facet_scatter <- scatterplot + facet_wrap(~genre, scales = "free")+
  theme_bw()+
  theme(
    legend.position = "top",
    text = element_text(family="Times New Roman")
  )
print(facet_scatter)
```

![](images/clipboard-3908480270.png)

This final visualization is 4D, depicting the relationship between the genre, runtime, revenue, and average rating. Action seems to have the most bell-curve shape, with fantasy, horror, and mystery having large plateaus and peaks throughout their graphs. Horror seemed to have the most movies with the lowest ratings, and mystery and action had several high-rated movies. Additionally, though it seems that mystery had several movies that made a lot of money, the values on the y-axis are significantly smaller than those on the action and fantasy graphs. This means that fantasy must have had the highest-grossing movies, though action has more movies that made consistently more money. Horror and mystery are both movies that have had the shortest runtime, which is understandable as action and fantasy typically requires more budget, and as a result, can afford longer runtime. All in all, there is definitely a relationship between all four variables, because it is clear that there are discrepancies between each variable in every genre. This is why it was crucial to separate the movie by genre, because the values were so different for every movie in the category for the analysis to be as insightful as it currently is.\
